services:
  redis:
    image: redis:7
    ports: ["6379:6379"]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal"]
      interval: 5s
      timeout: 5s
      retries: 20

  temporal:
    image: temporalio/auto-setup:1.29.0
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      #- DB=postgresql
      - DB=postgres12_pgx
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgres
      # Use SQL visibility (no Elasticsearch)
      - SKIP_DEFAULT_NAMESPACE=false
      - DEFAULT_NAMESPACE=default
    ports:
      - "7233:7233"   # gRPC
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "workflow", "list"]
      interval: 10s
      timeout: 5s
      retries: 20

  temporal-ui:
    image: temporalio/ui:2.30.0
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_UI_PORT=8080
      # for local dev; restrict as needed
      - TEMPORAL_CORS_ORIGINS=http://localhost:8080
    ports:
      - "8080:8080"

  dripper:
    build: .
    command: python tools/dripper.py
    environment:
      - REDIS_URL=redis://redis:6379/0
      - RATES=docx:status=10/sec,docx:search_download=10/min,tasktracker:writes=10/sec
      - NO_BACKLOG=true
    depends_on:
      redis:
        condition: service_started
    restart: unless-stopped

  stub-docx:
    build: .
    command: python stubs/docx_stub.py
    environment:
      - PORT=9000
    ports: ["9000:9000"]

  stub-tasktracker:
    build: .
    command: python stubs/tasktracker_stub.py
    environment:
      - PORT=9001
    ports: ["9001:9001"]

  worker-general:
    build: .
    command: python app/run_worker.py --queue general --max-activities 50
    environment:
      - LIMITER_MODE=dripper            # set to 'dripper' to enable the limiter
      - REDIS_URL=redis://redis:6379/0
      - TEMPORAL_ADDRESS=temporal:7233
      - STUB_DOCX_URL=http://stub-docx:9000
      - STUB_TT_URL=http://stub-tasktracker:9001
      - CSV_PATH=/workspace/data/activity_log.csv
    volumes: ["./data:/workspace/data"]
    depends_on:
      temporal:
        condition: service_healthy
      redis:
        condition: service_started
      stub-docx:
        condition: service_started
      stub-tasktracker:
        condition: service_started
    restart: unless-stopped

  worker-status:
    build: .
    command: python app/run_worker.py --queue status --max-activities 20
    environment:
      - LIMITER_MODE=dripper
      - REDIS_URL=redis://redis:6379/0
      - TEMPORAL_ADDRESS=temporal:7233
      - STUB_DOCX_URL=http://stub-docx:9000
      - STUB_TT_URL=http://stub-tasktracker:9001
      - CSV_PATH=/workspace/data/activity_log.csv
    volumes: ["./data:/workspace/data"]
    depends_on:
      temporal:
        condition: service_healthy
      redis:
        condition: service_started
      stub-docx:
        condition: service_started
      stub-tasktracker:
        condition: service_started
    restart: unless-stopped

  worker-convert:
    build: .
    command: python app/run_worker.py --queue convert --max-activities 2
    environment:
      - CONVERT_MAX=6
      - LIMITER_MODE=dripper
      - REDIS_URL=redis://redis:6379/0
      - TEMPORAL_ADDRESS=temporal:7233
      - STUB_DOCX_URL=http://stub-docx:9000
      - STUB_TT_URL=http://stub-tasktracker:9001
      - CSV_PATH=/workspace/data/activity_log.csv
    volumes: ["./data:/workspace/data"]
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4g
    depends_on:
      temporal:
        condition: service_healthy
      redis:
        condition: service_started
      stub-docx:
        condition: service_started
      stub-tasktracker:
        condition: service_started
    restart: unless-stopped

  demo:
    build: .
    command: python app/demo_run.py --patient-id P123
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      temporal:
        condition: service_healthy
      worker-general:
        condition: service_started
      worker-status:
        condition: service_started
      worker-convert:
        condition: service_started

volumes:
  postgres_data:
